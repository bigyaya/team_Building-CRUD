// composants/ActivitiesGrid.jsx
import { useRouter } from 'next/router';
import '../styles/activities.css'; // Importer les styles

export default function ActivitiesGrid({ activities }) { // Les activit√©s sont maintenant pass√©es en props
  const router = useRouter();

  const handleDiscoverClick = (id) => {
    router.push(`/activity/${id}`); // Redirection vers la page d'activit√© avec ObjectId
  };

  // V√©rification si `activities` est d√©fini et contient des √©l√©ments
  if (!activities || activities.length === 0) {
    return <div>Aucune activit√© disponible</div>; // Afficher un message si les activit√©s sont vides ou non d√©finies
  }

  return (
    <div className="activities-section">

      {/* Titre et sous-titre pour les activit√©s */}
      <div className="activities-header">
        <h2>Les meilleurs Team Building de Paris et Ile-de-France sont sur TeamBuild</h2> {/* Titre de la section */}
        <p>Vous recherchez une activit√© pour votre team building √† Paris ou en Ile-de-France ? Spotlag met √† votre disposition un large choix d‚Äôanimations originales qui pourront accueillir vos collaborateurs. </p> {/* Sous-titre */}
      </div>

      {/* Grille des activit√©s */}
      <div className="activities-grid">
        {activities.map((activity) => (
          <div key={activity._id} className="card">
            <img src={activity.image} alt={activity.title} />
            <h3>{activity.title}</h3>
            <p>{activity.description}</p>
            <div className="info">
              <div>
                <span className="icon">üë•</span> Jusqu√† {activity.maxParticipants} pers.
              </div>
              <span href="#" className="location">{activity.location}</span>
            </div>
              <a href={`/activity/${activity._id}`} className="button primary">
            <button>
                Voir plus
            </button>
              </a>
          </div>
        ))}
      </div>
    </div>
  );
}

// R√©cup√©ration des donn√©es depuis MongoDB
export async function getServerSideProps() {
  await dbConnect(); // Connexion √† la base de donn√©es

  const result = await Activite.find({}); // R√©cup√©rer toutes les activit√©s depuis MongoDB
  const activities = result.map((doc) => {
    const activity = doc.toObject();
    activity._id = activity._id.toString(); // Convertir l'ObjectId en cha√Æne de caract√®res
    return activity;
  });

  return {
    props: { activities }, // Passer les activit√©s en tant que props
  };
}
